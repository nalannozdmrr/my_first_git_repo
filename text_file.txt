do not delete this file 
This file is important

Day 1
-----
STEP 1: Create a project on intellij
file>new project
Name : my_github_project
-------------------------
STEP 2: Create github repository
*Repository(git repo) means github project folders. We must create a repository to store projectc
*We already installed git.
-------------------------
****STEPS FOR CREATING A REPOSITORY****
repository
***. https://github.com/ and login
***. click on your profile
***. Click on your repository
***. Click on New
***. repository name : my-first-git-repo
***. select public or private then create
-------------------------
STEP 3: Push the first code to github
*Open intellij terminal
*Then follow the instruction on github!!!
     *git init :Done by only ones for each project.This is used for initializing
      the project. This will create .git folder to store the project versions!!!

NOTE: If you see: The term 'git' is not recognized it means github installiation
      is not complete. Then get in touch with tech support

     *git add . :Done after each code changes.

     *git commit -m "first commit" :Done after each code changes.
     This is used for creating new versions of the project

     *git branch -M :Done once for each project

     *git remote add origin httpa://github.com/nalannozdmrr/my-first-git-repo.git
     :Done once for each project

     *git push -u origin main :Done once for each project

***If your code is successfully pushed, then you should refresh your github and
see your code in github
***If your see error read the error message
DONE**************

*****GIT PUSH PRACTICE*****
After the first push, we do not use some of the git comments that we used in the first commit.

1.Create a new java class under src: FirstJavaClass
2.Create a main methıd and write code :
public class FirstJavaClass{
   public static void main(String[] args) {
       System.out.println("Learning github");
   }
}
3.Then push this code to the same repository

     *git add .
     *git commit -m "second commit"
     *git push

*******************************************************

HOW TO PULL THE CODE FROM GITHUB TO LOCAL COMPUTER
*Create a new file: text_file.txt
*Add some comments: do not delete this file
                    This file is important
*Commit new file
***Now we created a file in github

We will get that code from github to intellij.
In intellij terminal write below commend to pull the code
   *git pull

***USEFULL COMMENDS:

git status : This is our friend
We see the status of our codes
We can use this anytime to see where your are

Day02*******
***REVİEW OF GIT PUSH:
    *git add .
    *git commit -m "second commit"
    *git push

***REVİEW ABOUT GIT PULL:
    *git pull
Create a new class RemoteJavaClass.java under src folder in github
*Create new file
*Type below code in that file
public class RemoteJavaClass {
   //This will also have some java code
}
*Scroll down and click commit new fie
*git pull
Then your github code should be in your local repo

***How to push ONLY ONE SPECIFIC file?

    *git add "path of the file"
    *git commit -m "message"
    *git push
Example:
Create a new java class: ForthJavaClass
Create another java class: FifthJavaClass
Create a new commit to push only ForthJavaClass
Create another commit to push only FifthJavaClass

*git add "src/ForthJavaClass.java"
*git commit -m "message"
*git push
----
This code should push only src/ForthJavaClass.java
-------
If you get an error solution:
*git pull
*git add .
* git commit -m "message"
*git push
---------------
How to ignore a file?
.gitignore

*We create .gitignore file in project level
*We add the path of classes that we want to ignore
*For example, if you add EightJavaClass.java in .gitignore
then that file cannot be pushed to github

How can we make it visible?
Remote the path of the class from the github?
----------------
****When do you get conflict issue?
If github and intellij haf DIFFERENT CODES in the SAME LINE
****How do you resolve conflict?
Normally IDE(intellij) has seating the resolve conflict automatically
But I prefer to solve manually because I need to see what is the conflict
-----------------
****WHY BRANCH?
We never write in the master/main branch when working with team
We are making copy of the original code and working on it without breaking
original source code with branch
Each person it the team work in their own local branch and push their own
remote repo
Then do 'pull request'.Then one developer reviews the codes and approves pull request,
then we merge codes goes to remote master/mail
****BENEFITS OF BRANCH
Security of the original codes
Faster development
Responsibility and ownership of their own code
Less mistakes
Quick fixes
Organized codes
No chaos
--------------------
*Summary
-Git is a version control for tracking a project version,
and storing them
-Git is used for collaboration within a team
-------
git init -> is used once at the beginning of each project
git add . -> add codes
git commit -m "message" -> sending the code to github
-------
git pull -> used for pulling the new codes from github
We might get conflict IF THE CODES ARE ON THE SAME FILE ON THE SAME
LINE
NOTE: to avoid conflict, we can work on our own branches, OR we work
on different folder/files
























